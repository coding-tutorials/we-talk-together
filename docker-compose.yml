services:
#apps
  producer:
    image: nodejsapp:latest
    network_mode: host
    working_dir: /home/node/app
    volumes:
      - ./apps/app_producer:/home/node/app
    environment:
    - HTTP_PORT=7000
    - SERVICE_NAME=producer
    ports:
    - "7000"
    command: npm start  
  #logging
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.5.2
    network_mode: host
    ports:
      - "9200"
      - "9300"
    volumes:
      - ./elasticsearch/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
      - ./elasticsearch-data:/usr/share/elasticsearch/data
    environment:
      node.name: elasticsearch
      ES_JAVA_OPTS: -Xms512m -Xmx512m
      ELASTIC_PASSWORD: elastic123
      # Use single node discovery in order to disable production mode and avoid bootstrap checks.
      # see: https://www.elastic.co/guide/en/elasticsearch/reference/current/bootstrap-checks.html
      discovery.type: single-node

  logstash:
    image: docker.elastic.co/logstash/logstash:8.5.2
    network_mode: host
    ports:
      - 5044:5044
      - 50000:50000/tcp
      - 50000:50000/udp
      - 9600:9600
    volumes:
      - ./logstash:/usr/share/logstash/config
      - ./logstash-data:/usr/share/logstash/pipeline
    environment:
      LS_JAVA_OPTS: -Xms256m -Xmx256m
      LOGSTASH_INTERNAL_PASSWORD: logstash123
    depends_on:
      - elasticsearch
  kibana:
    image: docker.elastic.co/kibana/kibana:8.5.3
    network_mode: host
    volumes:
      - ./kibana/kibana.yml:/usr/share/kibana/config/kibana.yml
    ports:
      - 5601:5601
    environment:
      KIBANA_SYSTEM_PASSWORD: kibana123
    depends_on:
      - elasticsearch
      